class {
	onCreate() {
		this.state = {
			uploading: false,
			status: "",
			error: ""
		}
	}

	uploadPhotos() {
		this.state.uploading = true

		var data = new FormData(this.getEl("upload-form"))

		var xhr = new XMLHttpRequest()
		xhr.open("POST", "/api/photo")

		xhr.upload.addEventListener("progress", e => {
			if (!e.lengthComputable) return

			var completed = 100 * e.loaded/e.total

			if (completed < 100)
				this.state.status = completed.toFixed(2) + "%"
			else
				this.state.status = "Working..."
		}, false)


		xhr.addEventListener('load', () => {
			var data = JSON.parse(xhr.responseText)
			var uuid = data.data

			this.state.uploading = false
			this.emit('upload', uuid)
		})

		var error = {
			'504': "WARNING: Server couldn't finish request within 600 seconds and terminated this connection. The processing job is still running.",
			'413': "ERROR: Total size of uploaded files must be <= 100MB."
		}
		function handleError() {
			console.log('detected error')
			var code = xhr.status.toString()
			this.state.uploading = false
			this.state.error = error[code] || `ERROR: Unknown Error (${code})`
		}
		xhr.addEventListener('abort', handleError)
		xhr.addEventListener("error", handleError)

		xhr.send(data)
	}
}

div
	form key="upload-form"
		input type="file" name="photos" multiple
	$ var buttonTxt = state.uploading ? state.status : "Upload"
	button on-click('uploadPhotos') disabled=state.uploading -- ${buttonTxt}
	if(state.error)
		label -- ${state.error}
